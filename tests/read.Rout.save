
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> suppressPackageStartupMessages(library(sf))
> if ("GPKG" %in% st_drivers()$name) {
+ 	tst = st_read(system.file("gpkg/nc.gpkg", package="sf"), "nc.gpkg", crs = 4267, quiet = TRUE)
+ 	tst = st_read(system.file("gpkg/nc.gpkg", package="sf"), quiet = TRUE) # default layer name
+ }
> 
> tst = st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE) # no layer specified
> 
> # data from https://github.com/edzer/sfr/issues/6
> tst = st_read(system.file("shape/storms_xyz.shp", package="sf"), quiet = TRUE)
> class(st_geometry(tst))
[1] "sfc_LINESTRING" "sfc"           
> class(st_geometry(tst)[[1]])
[1] "XYZ"        "LINESTRING" "sfg"       
> tst = st_read(system.file("shape/storms_xyzm.shp", package="sf"), quiet = TRUE)
> class(st_geometry(tst))
[1] "sfc_LINESTRING" "sfc"           
> class(st_geometry(tst)[[1]])
[1] "XYM"        "LINESTRING" "sfg"       
> tst = st_read(system.file("shape/storms_xyz_feature.shp", package="sf"), quiet = TRUE)
> class(st_geometry(tst))
[1] "sfc_LINESTRING" "sfc"           
> class(st_geometry(tst)[[1]])
[1] "XYZ"        "LINESTRING" "sfg"       
> tst = st_read(system.file("shape/storms_xyzm_feature.shp", package="sf"), quiet = TRUE)
> class(st_geometry(tst))
[1] "sfc_LINESTRING" "sfc"           
> class(st_geometry(tst)[[1]])
[1] "XYM"        "LINESTRING" "sfg"       
> 
> if ("GPKG" %in% st_drivers()$name) { # read Int64
+     print(st_read(system.file("gpkg/tl.gpkg", package="sf"), quiet = TRUE)$AWATER)
+     print(st_read(system.file("gpkg/tl.gpkg", package="sf"), , quiet = TRUE, int64_as_string = TRUE)$AWATER)
+ }
[1] 1028678842
[1] 1028678842
Levels: 1028678842
> 
> # see https://github.com/edzer/sfr/issues/45 :
> if ("OSM" %in% st_drivers()$name) {
+ 	osm = system.file("osm/overpass.osm", package="sf")
+ 	st_layers(osm, do_count = TRUE)
+ 	suppressWarnings(st_read(osm, "multipolygons", quiet = TRUE))
+ }
Simple feature collection with 3 features and 25 fields
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: -1.556254 ymin: 53.79519 xmax: -1.550716 ymax: 53.80341
epsg (SRID):    4326
proj4string:    +proj=longlat +datum=WGS84 +no_defs
  osm_id osm_way_id name type aeroway amenity admin_level barrier boundary
1   <NA>  263958111 <NA> <NA>    <NA>    <NA>        <NA>    <NA>     <NA>
2   <NA>  301461256 <NA> <NA>    <NA>    <NA>        <NA>    <NA>     <NA>
3   <NA>  462227487 <NA> <NA>    <NA>    <NA>        <NA>    <NA>     <NA>
  building craft geological historic land_area landuse leisure man_made
1     <NA>  <NA>       <NA>     <NA>      <NA>    <NA>    park     <NA>
2     <NA>  <NA>       <NA>     <NA>      <NA>    <NA>    park     <NA>
3     <NA>  <NA>       <NA>     <NA>      <NA>    <NA>    park     <NA>
  military natural office place shop sport tourism other_tags
1     <NA>    <NA>   <NA>  <NA> <NA>  <NA>    <NA>       <NA>
2     <NA>    <NA>   <NA>  <NA> <NA>  <NA>    <NA>       <NA>
3     <NA>    <NA>   <NA>  <NA> <NA>  <NA>    <NA>       <NA>
                        geometry
1 MULTIPOLYGON(((-1.5507185 5...
2 MULTIPOLYGON(((-1.5557631 5...
3 MULTIPOLYGON(((-1.551502 53...
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # layer opening option:
> st_read(system.file("shape/nc.shp", package="sf"), 
+ 	options = c("ADJUST_TYPE=YES", "ENCODING=CPL_ENC_UTF8"))
options:        ADJUST_TYPE=YES ENCODING=CPL_ENC_UTF8 
Reading layer `nc' from data source `/home/edzer/git/sf.Rcheck/sf/shape/nc.shp' using driver `ESRI Shapefile'
converted into: MULTIPOLYGON
Simple feature collection with 100 features and 14 fields
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
epsg (SRID):    4267
proj4string:    +proj=longlat +datum=NAD27 +no_defs
> 
> if ("GPKG" %in% st_drivers()$name) { # shapefiles can't write point+multipoint mix:
+   x <- st_sf(a = 1:2, geom = st_sfc(st_point(0:1), st_multipoint(matrix(1:4,2,2))))
+   st_write(x, "x.gpkg")
+   x <- st_read("x.gpkg")
+   print(x)
+ }
Writing layer `x.gpkg' to data source `x.gpkg' using driver `GPKG'
features:       2
fields:         1
geometry type:  Unknown (any)
Reading layer `x.gpkg' from data source `/home/edzer/git/sf.Rcheck/tests/x.gpkg' using driver `GPKG'
converted into: MULTIPOINT
Simple feature collection with 2 features and 1 field
geometry type:  MULTIPOINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 2 ymax: 4
epsg (SRID):    NA
proj4string:    NA
Simple feature collection with 2 features and 1 field
geometry type:  MULTIPOINT
dimension:      XY
bbox:           xmin: 0 ymin: 1 xmax: 2 ymax: 4
epsg (SRID):    NA
proj4string:    NA
  a                 geom
1 1      MULTIPOINT(0 1)
2 2 MULTIPOINT(1 3, 2 4)
> x <- st_sf(a = 1:2, geom = st_sfc(st_linestring(matrix(1:4,2,2)), 
+ 	st_multilinestring(list(matrix(1:4,2,2), matrix(10:13,2,2)))))
> st_write(x, "x.shp")
Writing layer `x.shp' to data source `x.shp' using driver `ESRI Shapefile'
features:       2
fields:         1
geometry type:  Unknown (any)
> x <- st_read("x.shp")
Reading layer `x' from data source `/home/edzer/git/sf.Rcheck/tests/x.shp' using driver `ESRI Shapefile'
converted into: MULTILINESTRING
Simple feature collection with 2 features and 1 field
geometry type:  MULTILINESTRING
dimension:      XY
bbox:           xmin: 1 ymin: 3 xmax: 11 ymax: 13
epsg (SRID):    NA
proj4string:    NA
> x
Simple feature collection with 2 features and 1 field
geometry type:  MULTILINESTRING
dimension:      XY
bbox:           xmin: 1 ymin: 3 xmax: 11 ymax: 13
epsg (SRID):    NA
proj4string:    NA
  a                       geometry
1 1    MULTILINESTRING((1 3, 2 4))
2 2 MULTILINESTRING((1 3, 2 4),...
> 
> try(st_layers("foo")) # cannot open datasource
Cannot open data source foo
Error in CPL_get_layers(dsn, options, do_count) : Open failed.

> try(st_read("foo")) # cannot open datasource
Cannot open data source foo
Error in CPL_read_ogr(dsn, layer, as.character(options), quiet, iGeomField -  : 
  Open failed.

> try(st_read("x.gpkg", "foo")) # cannot open layer
Cannot open layer foo
Error in CPL_read_ogr(dsn, layer, as.character(options), quiet, iGeomField -  : 
  Opening layer failed.

> try(st_write(c("foo", "bar")))
Error : inherits(obj, "sf") is not TRUE
> try(st_write(x, c("foo", "bar")))
Error : length(dsn) == 1 is not TRUE
In addition: Warning message:
In if (file.exists(dsn)) dsn = normalizePath(dsn) :
  the condition has length > 1 and only the first element will be used
> try(st_write(x, "foo", driver = "foo"))
foo driver not available.
Error in CPL_write_ogr(obj, dsn, layer, driver, as.character(dataset_options),  : 
  Driver not available.

> try(st_write(x, "/x", driver = "ESRI Shapefile"))
Writing layer `x' to data source `/x' using driver `ESRI Shapefile'
Creation of dataset /x failed.
Error in CPL_write_ogr(obj, dsn, layer, driver, as.character(dataset_options),  : 
  Creation failed.

In addition: Warning message:
In CPL_write_ogr(obj, dsn, layer, driver, as.character(dataset_options),  :
  GDAL Error 1: Failed to create directory /x
for shapefile datastore.

> 
> proc.time()
   user  system elapsed 
  0.488   0.004   0.492 
